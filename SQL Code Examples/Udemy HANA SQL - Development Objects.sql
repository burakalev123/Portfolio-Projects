-- UPDATE & INSERT Statements
INSERT INTO
	STUDENT (ID, NAME, COURSE)
VALUES
	(12, 'S12', 'C12');

UPDATE
	STUDENT
SET
	COURSE = 'C3'
WHERE
	ID = 9
UPDATE
	COURSE
SET
	PRICE = PRICE + 100;

------------------------------------------------------------
-- UPSERT = UPDATE + INSERT
UPSERT COURSE
VALUES
	('C20', 'TEST', 1000, 5)
WHERE
	ID = 'C20'
DELETE FROM
	COURSE
WHERE
	ID = 'C20' DROP TABLE COURSE ------------------------------------------------------------
	-- CREATE TABLE
	CREATE TABLE FIRST_TABLE(ID INT, NAME NVARCHAR(10));

SELECT
	*
FROM
	TABLES
WHERE
	TABLE_NAME = 'FIRST_TABLE';

--Creation the table in directly to T4H Schema
CREATE TABLE T4H.FIRST_TABLE(ID INT, NAME NVARCHAR(10));

--COLUMN Table creation 
CREATE COLUMN TABLE COLUMN_TABLE(ID INT, NAME NVARCHAR(10));

------------------------------------------------------------
-- Insert data without Primary key, duplicate values
INSERT INTO
	"T4H"."COLUMN_TABLE"
VALUES
(1, 'NAME1');

-- Table with Primary Key
CREATE COLUMN TABLE PK_TABLE(
	ID INT PRIMARY KEY,
	-- NO NULL & NO Duplicates
	NAME NVARCHAR(10)
);

INSERT INTO
	PK_TABLE
VALUES
(1, 'NAME1');

------------------------------------------------------------
-- Table with UNIQUE 
CREATE COLUMN TABLE SALES(
	ORDER_NO INT UNIQUE,
	-- NO Duplicates & YES NULL
	PRODUCT NVARCHAR(10),
	QTY INT
);

INSERT INTO
	SALES
VALUES
	(1, 'PROD1', 50) ------------------------------------------------------------
	CREATE COLUMN TABLE PK_SALES(
		ORDER_NO INT,
		PRODUCT NVARCHAR(10),
		QTY INT NOT NULL DEFAULT 1 -- Default 1 for QTY Field will be assigned
		PRIMARY KEY (ORDER_NO, PRODUCT)
	);

------------------------------------------------------------
--IDENTITY: ORDER Number will generated Automaticaly in series.
DROP TABLE PK_SALES CREATE COLUMN TABLE PK_SALES(
	ORDER_NO INT GENERATED BY DEFAULT AS IDENTITY,
	PRODUCT NVARCHAR(10),
	QTY INT DEFAULT 1 NOT NULL,
	PRIMARY KEY (ORDER_NO, PRODUCT)
);

INSERT INTO
	PK_SALES(PRODUCT)
VALUES
('PROD2');

------------------------------------------------------------
--Create Table with Reference
CREATE TABLE PK_SALES2 LIKE PK_SALES;

-- Structure Copy
CREATE TABLE PK_SALES_BACKUP LIKE PK_SALES WITH DATA;

--Table copy with data
CREATE TABLE USER_SQ AS (
	SELECT
		ORDER_NO,
		PRODUCT
	FROM
		PK_SALES
	WHERE
		ORDER_NO = 1
);

------------------------------------------------------------
CREATE COLUMN TABLE ATM_TRANSACTIONS(
	TID INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (START WITH 100),
	CITY NVARCHAR(25) NOT NULL,
	LOCATION NVARCHAR(100) DEFAULT 'One ATM in the City',
	AMOUNT DEC(10, 2) NOT NULL,
	TIME Timestamp DEFAULT CURRENT_TIMESTAMP
)
INSERT INTO
	"T4H"."ATM_TRANSACTIONS" (CITY, LOCATION, AMOUNT)
VALUES
	('New York', 'Capitol Blvd', 250) ------------------------------------------------------------
	--Table Change
ALTER TABLE
	[TABLE NAME] [ADD | DROP | ALTER] (COLUMN NAME...)
ALTER TABLE
	USER
ADD
	(STATE VARCHAR(10));

ALTER TABLE
	USER
ADD
	(CITY VARCHAR(10) NOT NULL DEFAULT 'SFO');

-- Yeni kolon ekledigimiz icin hem NOT NULL koyup hem de default koymazsak olmaz.
ALTER TABLE
	USER
ADD
	PRIMARY KEY (ID)
ALTER TABLE
	USER ALTER (NAME NVARCHAR(10))
ALTER TABLE
	USER ROW -- ROW Table'a cevirdi
ALTER TABLE
	USER COLUMN -- COLUMN Table'a cevirdi
	RENAME COLUMN USER.ID TO USER_ID -- Column ismini degistirdik.
	RENAME TABLE USER to USER2 -- Tablo ismini degistirdik.
	------------------------------------------------
	------------------------------------------------
	-- There are 3 types of views supported by HANA
	--    1. Database views using SQL DDL
	--    2. Graphical Calc. Views or Information Models.
	--    3. Views using CDS
	CREATE COLUMN TABLE TAB1 (C1 INT, C2 VARCHAR(10));

INSERT INTO
	TAB1
VALUES
	(1, 'ONE');

INSERT INTO
	TAB1
VALUES
	(2, 'TWO');

INSERT INTO
	TAB1
VALUES
	(3, 'THREE');

SELECT
	*
FROM
	TAB1;

CREATE VIEW V1 AS
SELECT
	*
FROM
	TAB1
WHERE
	C1 = 2;

CREATE VIEW V2 AS
SELECT
	C1
FROM
	TAB1;

CREATE VIEW V3 (ID, NAME) AS
SELECT
	*
FROM
	TAB1;